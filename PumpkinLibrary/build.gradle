plugins {
    id 'org.jetbrains.kotlin.multiplatform'// version '1.4.10'
}

group 'com.pumpkin'
version '1.0'

repositories {
    mavenCentral()
}

kotlin {
    /* Targets configuration omitted.
    *  To find out how to configure the targets, please follow the link:
    *  https://kotlinlang.org/docs/reference/building-mpp-with-gradle.html#setting-up-targets */
    jvm {
        compilations.all {
            kotlinOptions.jvmTarget = '11'
        }
        testRuns["test"].executionTask.configure {
            useJUnit()
        }
    }
    js {
        browser {
            webpackTask {
                cssSupport.enabled = true
            }

            runTask {
                cssSupport.enabled = true
            }

            testTask {
                useKarma {
                    useChromeHeadless()
                    webpackConfig.cssSupport.enabled = true
                }
            }
        }
        binaries.executable()
    }
    mingwX64 {
        compilations.main.cinterops {
            glfw
        }
        binaries {
            executable {
                entryPoint = "com.pumpkin.platform.main"
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')

                implementation project(':Libraries')

                ["", "-glfw", "-opengl", "-stb", "-tinyfd"].each {
                    implementation "org.lwjgl:lwjgl$it:3.2.3"
                    runtimeOnly "org.lwjgl:lwjgl$it:3.2.3:natives-windows"
                }

                //implementation platform("org.lwjgl:lwjgl-bom:3.2.3")

                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1'

                implementation "org.jetbrains.kotlin:kotlin-reflect:1.4.10"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {

        }
        jvmTest {
            dependencies {
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation project(':Libraries')
            }
        }
        jsTest {

        }
        mingwX64Main {
            dependencies {
                implementation project(':Libraries')
            }
        }
        mingwX64Test {

        }
        all {
            languageSettings.enableLanguageFeature("InlineClasses")
        }
    }
}